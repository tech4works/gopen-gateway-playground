input {
  gelf {
    port => 12201
  }
}

filter {
    mutate {
        gsub => ["message", "\x1b\[\d+m", ""]
    }
    grok {
        match => {"message" => "\[%{WORD:journey}\] %{WORD:level_name} %{GREEDYDATA:custom_message}"}
    }

    if [journey] in ["END", "BKD", "BFW", "AFW", "REQ", "RES"] {

        if [level_name] == "DBG" {
            mutate { replace => { "level" => "1" } }
        } else if [level_name] == "INF" {
            mutate { replace => { "level" => "2" } }
        } else if [level_name] == "WRN" {
            mutate { replace => { "level" => "3" } }
        } else if [level_name] == "ERR" {
            mutate { replace => { "level" => "4" } }
        }

        if [journey] == "REQ" {
            grok {
              match => {
                "custom_message" => "\[%{GREEDYDATA:request.path} \| %{IP:request.client.ip} \| %{NOTSPACE:trace.id} \| %{WORD:request.method} \| \"%{GREEDYDATA:request.url}\"\] header.user-agent: %{GREEDYDATA:request.header.agent} \| header.size: %{NUMBER:request.header.size:int}B(?: \| body.content-type: %{GREEDYDATA:request.body.content_type} \| body.size: %{NUMBER:request.body.size:int}B)?"
              }
            }
        } else if [journey] == "RES" {
           grok {
              match => {
               "custom_message" => "\[%{GREEDYDATA:request.path} \| %{IP:request.client.ip} \| %{NOTSPACE:trace.id} \| %{WORD:request.method} \| \"%{GREEDYDATA:request.url}\"\] status-code: %{NUMBER:response.status_code:int} \| duration: %{NUMBER:response.duration:int}ms"
              }
           }
        } else if [journey] == "END" {
            grok {
              match => {
               "custom_message" => "\[%{GREEDYDATA:request.path} \| %{IP:request.client.ip} \| %{NOTSPACE:trace.id} \| %{WORD:request.method} \| \"%{GREEDYDATA:request.url}\"\] %{GREEDYDATA:endpoint.message}"
              }
            }
        } else if [journey] in ["BKD", "BFW", "AFW"] {
            if [level] in ["3", "4"] {
                grok {
                  match => {
                    "custom_message" => "\[%{GREEDYDATA:backend.request.path} \| %{IP:backend.request.client.ip} \| %{NOTSPACE:backend.request.trace.id} \| %{WORD:backend.request.method} \| \"%{GREEDYDATA:backend.request.url}\"\] %{GREEDYDATA:backend.message}"
                  }
                }
            } else {
               grok {
                  match => {
                    "custom_message" => "\[%{GREEDYDATA:backend.request.path} \| %{IP:backend.request.client.ip} \| %{NOTSPACE:backend.request.trace.id} \| %{WORD:backend.request.method} \| \"%{GREEDYDATA:backend.request.url}\"\] %{WORD:subtag} %{GREEDYDATA:new_custom_message}"
                  }
               }

               if [subtag] == "REQ" {
                    grok {
                        match => {
                          "new_custom_message" => "header.user-agent: %{GREEDYDATA:backend.request.header.agent} \| header.size: %{NUMBER:backend.request.header.size:int}B(?: \| body.content-type: %{GREEDYDATA:backend.request.body.content_type} \| body.size: %{NUMBER:backend.request.body.size:int}B)?"
                        }
                    }
               } else {
                    grok {
                         match => {
                          "new_custom_message" => "status-code: %{NUMBER:backend.response.status_code:int} \| duration: %{NUMBER:backend.response.duration:int}ms"
                         }
                    }
               }
            }
        }

        mutate {
            remove_field => ["custom_message", "new_custom_message", "subtag"]
        }
    }
}

output {
   elasticsearch {
      hosts => ["http://elasticsearch:9200"]
      index => "gopen-gateway-%{+YYYY.MM.dd}"
   }
}